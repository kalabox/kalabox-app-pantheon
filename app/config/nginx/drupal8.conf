server {
  listen 8888 default_server;
  listen 444 ssl;

  server_name appserver;

  ssl_certificate           /certs/appserver.crt;
  ssl_certificate_key       /certs/appserver.key;
  ssl_verify_client         off;

  root /code;
  index index.html index.htm index.php;
  port_in_redirect off;
  client_max_body_size 100M;

  # No reading git files
  location ~ /\.git {
      deny all;
  }

  # Original formula Drupal code protection as per .htaccess
  location ~ \.(engine|inc|install|make|module|profile|po|sh|.*sql|theme|twig|tpl(\.php)?|xtmpl|yml)$|^(\..*|Entries.*|Repository|Root|Tag|Template)$ {
      return 403;
  }

  # Protect /private (for private code)
  location ~ ^/private/ {
      return 403;
  }

  # Protect /sites/default/files/private (for private files)
  location ~ ^/sites/default/files/private/ {
      return 403;
  }

  # Protect /sites/default/config (for staging configuration)
  location ~ ^/sites/default/config/ {
      return 403;
  }

  # Protect /sites/default/files/config (for active configuration)
  location ~ ^/sites/default/files/config/ {
      return 403;
  }

  location ~ /sites/default/files/.*\.php$ {
      # error_page 403 /php_in_valhalla.html;
      return 403;
  }

  location ~ ^/robots.txt {
      add_header Cache-Control max-age=86000;
  }

  # Web fonts support.
  location ~* \.(eot|ttf|woff|otf|svg)$ {
      # auth_basic $auth_basic_realm;
      add_header    Access-Control-Allow-Origin *;  # Firefox needs this.
      try_files $uri $uri/ @cleanurl;
      expires       -1;
      log_not_found off;
  }

  # Support for .svgz
  location ~* \.(svgz)$ {
      # auth_basic $auth_basic_realm;
      try_files $uri $uri/ @cleanurl;
      expires       -1;
      add_header    Content-encoding gzip;  # So browsers will gunzip
      gzip          off; # don't double-compress
  }

  location / {
      # auth_basic $auth_basic_realm;
      try_files $uri $uri/ @cleanurl;
      # Catch directory listing errors (i.e. no code)
      error_page 403 /403.html;
      # error_page 301 =301 $client_scheme://$host$uri/$is_args$args;
  }

  location @cleanurl {
      rewrite ^/(.*)$ /index.php?q=$1 last;
  }

  # These need to be listed from most specific to most general.
  location ~ ^/simplesaml/ {
      # auth_basic $auth_basic_realm;
      fastcgi_intercept_errors on;
      fastcgi_pass unix:/php/php5-fpm.sock;
      fastcgi_index index.php;
      include fastcgi_params;
      # Allow SimpleSamlPHP to work by settig PATH_INFO, etc
      fastcgi_split_path_info ^(.+?\.php)(/.+)$;
      fastcgi_param SCRIPT_FILENAME /code/$fastcgi_script_name;
      # Catch php-fpm timeout errors
      error_page 504 /504.html;
  }
  location ~ \.php(/|$) {
      # auth_basic $auth_basic_realm;
      try_files $uri $uri/ @cleanurl;
      fastcgi_intercept_errors on;
      fastcgi_pass unix:/php/php5-fpm.sock;
      fastcgi_index index.php;
      include fastcgi_params;
      # Allow SimpleSamlPHP to work by settig PATH_INFO, etc
      fastcgi_split_path_info ^(.+?\.php)(/.+)$;
      fastcgi_param SCRIPT_FILENAME /code/$fastcgi_script_name;
  }

  location ~ /\.ht {
      deny all;
  }
}
